name: 🚀 Auto Deploy & Smile

on:
  push:
    branches: 
    - "main"

jobs:
  distant_deploy:
    runs-on: ubuntu-latest

    steps:
      # 🔐 1. Chargement de la clé SSH
      - name: 🔐 Charger la clé SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.RPI_SSH_KEY }}

      # 🧪 2. Mise à jour du git
      - name: 🧪 Mise à jour du git (git pull)
        env:
          SSH_HOST: ${{ secrets.RPI_IP }}
          SSH_USER: ${{ secrets.RPI_USER }}
          SSH_PORT: ${{ secrets.RPI_SSH_PORT }}
        run: |
          PORT="${SSH_PORT:-22}"
          ssh-keyscan -p "$PORT" "$SSH_HOST" >> ~/.ssh/known_hosts

          ssh -p "$PORT" "$SSH_USER@$SSH_HOST" << EOF
            cd /home/pi/CheckFesseDomain || exit 1
            git pull origin main
          EOF

      # 🚀 3. Déploiement Docker
      - name: 🚀 Deploy & Docker Compose
        env:
          SSH_HOST: ${{ secrets.RPI_IP }}
          SSH_USER: ${{ secrets.RPI_USER }}
          SSH_PORT: ${{ secrets.RPI_SSH_PORT }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          PORT="${SSH_PORT:-22}"
          ssh-keyscan -p "$PORT" "$SSH_HOST" >> ~/.ssh/known_hosts

          ssh -p "$PORT" "$SSH_USER@$SSH_HOST" << EOF
            cd /home/pi/CheckFesseDomain || exit 1

            docker stop domain-watcher || true
            docker rm domain-watcher || true
            docker rmi domain-watcher:latest || true

            docker build -t domain-watcher .

            echo "✅ DÉMARRAGE AVEC : DOMAIN_NAME=\$DOMAIN_NAME"

            docker run -d \
              --name domain-watcher \
              --restart unless-stopped \
              -e DOMAIN_NAME="${DOMAIN_NAME}" \
              -e TELEGRAM_TOKEN="${TELEGRAM_TOKEN}" \
              -e TELEGRAM_CHAT_ID="${TELEGRAM_CHAT_ID}" \
              domain-watcher
          EOF

      # 🚀 4. Annonce sur discord
      - name: 📢 Discord finish deployment announcement
        run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
            "embeds": [
              {
                "title": "Github",
                "description": "✅ Déploiement **terminé**.\n\n",
                "color": 3992355,
                "author": {
                  "name": "Nouveau COMMIT"
                },
                "url": "https://github.com/${{ github.repository }}",
                "footer": {
                  "text": "Généré automatiquement via notre script de deploiement"
                }
              }
            ]
          }'

  ping_discord:
    runs-on: ubuntu-latest
    steps:
      - name: 📡 Discord pre notification with embed
        env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
            "embeds": [
              {
                "title": "Github",
                "description": "⏰ [${{ github.event.head_commit.timestamp }}] - Déploiement en cours.\n\n🔧 ${{ github.event.head_commit.message }}",
                "color": 15410096,
                "author": {
                  "name": "Nouveau COMMIT"
                },
                "url": "https://github.com/${{ github.repository }}",
                "footer": {
                  "text": "Généré automatiquement via notre script de deploiement"
                }
              }
            ]
          }'
